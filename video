#!/usr/bin/python
import cv2
import opc
import os
import sys
import signal
import time

pid = str(os.getpid())
pidfile = "/var/run/fadecandy.pid"

if os.path.isfile(pidfile):
    print ("{0} already exists, exiting".format(pidfile))
    sys.exit(1)
else:
    with open(pidfile, 'w') as infile:
        infile.write(pid)


def set_exit_handler(func):
    signal.signal(signal.SIGTERM, func)


def on_exit(sig, func=None):
    print "exit handler triggered"
    sys.exit(1)


def opencv_image_to_array(im):
    #resize image to our display size
    print(im)
    out = cv2.resize(im, (32,25)).tolist()
    #flatten image to a 1d array
    flat =  [item for sublist in out for item in sublist]
    #fix color, opencv uses bgr, we want rgb
    array = [(item[2], item[1], item[0]) for item in flat]
    #map the image array to our display, which has alternating rows
    array = fix_array(array)
    return array


if __name__ == '__main__':
    set_exit_handler(on_exit)
    client = opc.Client('localhost:7890')

    success = True
    vidcap = cv2.VideoCapture('/home/pi/fadecandy_shenanigans/BigBuckBunny_320x180.mp4')
    while 1:
        success, image = vidcap.read()
        if success:
            client.put_pixels(image)
            if cv2.waitKey(10) == 27:
                break

